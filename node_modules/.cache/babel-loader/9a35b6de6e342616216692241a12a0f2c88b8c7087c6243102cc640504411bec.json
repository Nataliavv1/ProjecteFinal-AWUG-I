{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Documents\\\\GitHub\\\\ProjecteFinal-AWUG-I\\\\src\\\\components-recipes\\\\Pagination.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pagination({\n  currentPage,\n  setCurrentPage,\n  visiblePages,\n  setVisiblePages,\n  recipes,\n  recipesPerPage\n}) {\n  _s();\n  const totalPages = Math.ceil(recipes.length / recipesPerPage);\n\n  // Asegurarse de que `visiblePages` siempre tenga un valor inicial válido\n  useEffect(() => {\n    // Si `visiblePages` no está definido o está vacío, inicializar con las primeras 5 páginas o hasta `totalPages`\n    if (!visiblePages || visiblePages.length === 0) {\n      const pages = [];\n      for (let i = 1; i <= Math.min(5, totalPages); i++) {\n        pages.push(i);\n      }\n      setVisiblePages(pages);\n    }\n  }, [visiblePages, setVisiblePages, totalPages]);\n\n  // Manejo de la página siguiente\n  const handleNextPages = () => {\n    if (visiblePages[4] < totalPages) {\n      const newPages = visiblePages.map(page => page + 1);\n      setVisiblePages(newPages);\n    }\n  };\n\n  // Manejo de la página anterior\n  const handlePrevPages = () => {\n    if (visiblePages[0] > 1) {\n      const newPages = visiblePages.map(page => page - 1);\n      setVisiblePages(newPages);\n    }\n  };\n\n  // Verificar que el `currentPage` esté dentro del rango de las páginas visibles\n  useEffect(() => {\n    if (currentPage < visiblePages[0]) {\n      setCurrentPage(visiblePages[0]);\n    } else if (currentPage > visiblePages[4]) {\n      setCurrentPage(visiblePages[4]);\n    }\n  }, [currentPage, visiblePages, setCurrentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePrevPages,\n      disabled: visiblePages[0] === 1,\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), visiblePages && visiblePages.length > 0 && visiblePages.map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentPage(page),\n      className: page === currentPage ? 'active' : '',\n      children: page\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextPages,\n      disabled: visiblePages[4] >= totalPages,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Pagination, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Pagination","currentPage","setCurrentPage","visiblePages","setVisiblePages","recipes","recipesPerPage","_s","totalPages","Math","ceil","length","pages","i","min","push","handleNextPages","newPages","map","page","handlePrevPages","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/natal/Documents/GitHub/ProjecteFinal-AWUG-I/src/components-recipes/Pagination.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nfunction Pagination({\r\n  currentPage,\r\n  setCurrentPage,\r\n  visiblePages,\r\n  setVisiblePages,\r\n  recipes,\r\n  recipesPerPage\r\n}) {\r\n  const totalPages = Math.ceil(recipes.length / recipesPerPage);\r\n\r\n  // Asegurarse de que `visiblePages` siempre tenga un valor inicial válido\r\n  useEffect(() => {\r\n    // Si `visiblePages` no está definido o está vacío, inicializar con las primeras 5 páginas o hasta `totalPages`\r\n    if (!visiblePages || visiblePages.length === 0) {\r\n      const pages = [];\r\n      for (let i = 1; i <= Math.min(5, totalPages); i++) {\r\n        pages.push(i);\r\n      }\r\n      setVisiblePages(pages);\r\n    }\r\n  }, [visiblePages, setVisiblePages, totalPages]);\r\n\r\n  // Manejo de la página siguiente\r\n  const handleNextPages = () => {\r\n    if (visiblePages[4] < totalPages) {\r\n      const newPages = visiblePages.map((page) => page + 1);\r\n      setVisiblePages(newPages);\r\n    }\r\n  };\r\n\r\n  // Manejo de la página anterior\r\n  const handlePrevPages = () => {\r\n    if (visiblePages[0] > 1) {\r\n      const newPages = visiblePages.map((page) => page - 1);\r\n      setVisiblePages(newPages);\r\n    }\r\n  };\r\n\r\n  // Verificar que el `currentPage` esté dentro del rango de las páginas visibles\r\n  useEffect(() => {\r\n    if (currentPage < visiblePages[0]) {\r\n      setCurrentPage(visiblePages[0]);\r\n    } else if (currentPage > visiblePages[4]) {\r\n      setCurrentPage(visiblePages[4]);\r\n    }\r\n  }, [currentPage, visiblePages, setCurrentPage]);\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button\r\n        onClick={handlePrevPages}\r\n        disabled={visiblePages[0] === 1}\r\n      >\r\n        &lt;\r\n      </button>\r\n\r\n      {visiblePages && visiblePages.length > 0 &&\r\n        visiblePages.map((page) => (\r\n          <button\r\n            key={page}\r\n            onClick={() => setCurrentPage(page)}\r\n            className={page === currentPage ? 'active' : ''}\r\n          >\r\n            {page}\r\n          </button>\r\n        ))\r\n      }\r\n\r\n      <button\r\n        onClick={handleNextPages}\r\n        disabled={visiblePages[4] >= totalPages}\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}