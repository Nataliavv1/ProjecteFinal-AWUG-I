{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Documents\\\\GitHub\\\\ProjecteFinal-AWUG-I\\\\src\\\\components-recipes\\\\SimilarRecipes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFavorites } from \"../components/FavoritesContext\";\nimport { useCart } from \"../components/CartContext\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport \"./SimilarRecipes.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SimilarRecipes({\n  ingredients,\n  currentRecipeId\n}) {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    favorites,\n    addFavorite,\n    removeFavorite\n  } = useFavorites();\n  const {\n    cart,\n    addToCart,\n    removeFromCart\n  } = useCart();\n  const {\n    isAuthenticated,\n    loginWithRedirect\n  } = useAuth0();\n  const API_KEY = \"d0fba68ef5204602ac929844f28b7d5f\";\n\n  // Convertir la lista de ingredientes en un string para la búsqueda\n  const ingredientList = (ingredients === null || ingredients === void 0 ? void 0 : ingredients.map(ingredient => ingredient.name).join(\",\")) || \"\";\n\n  // Asumir el tipo de receta según el ingrediente principal\n  const getRecipeCategory = () => {\n    const mainIngredient = ingredients && ingredients[0] ? ingredients[0].name.toLowerCase() : \"\";\n    if (mainIngredient.includes(\"cookie\") || mainIngredient.includes(\"sugar\")) {\n      return \"dessert\"; // Categoría de postres (galletas, tortas, etc.)\n    }\n    if (mainIngredient.includes(\"pasta\") || mainIngredient.includes(\"noodle\")) {\n      return \"pasta\"; // Categoría de pasta\n    }\n    if (mainIngredient.includes(\"fish\") || mainIngredient.includes(\"seafood\")) {\n      return \"seafood\"; // Categoría de pescado/vida marina\n    }\n    if (mainIngredient.includes(\"chicken\") || mainIngredient.includes(\"beef\") || mainIngredient.includes(\"pork\")) {\n      return \"main course\"; // Categoría de carnes\n    }\n    return \"general\"; // Categoría general si no coincide con ninguna\n  };\n\n  // Modificar la URL para obtener recetas similares basadas en el tipo de receta\n  const category = getRecipeCategory();\n  const URL = `https://api.spoonacular.com/recipes/complexSearch?apiKey=${API_KEY}&cuisine=${category}&includeIngredients=${ingredientList}&number=10`;\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(URL);\n        const data = await response.json();\n        if (response.ok) {\n          if (data.results && data.results.length > 0) {\n            // Filtrar para asegurarse de que no se incluya la receta que se está visualizando\n            const filteredRecipes = data.results.filter(recipe => recipe.id !== currentRecipeId);\n            setRecipes(filteredRecipes); // Guardamos las recetas de la API\n          } else {\n            setError(\"No similar recipes found.\");\n          }\n        } else {\n          setError(data.message || \"The recipes could not be loaded.\");\n        }\n      } catch (error) {\n        setError(error.message || \"An error occurred while fetching recipes.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (ingredientList) {\n      fetchRecipes();\n    } else {\n      setLoading(false);\n      setError(\"No ingredients provided.\");\n    }\n  }, [ingredientList, category, currentRecipeId]); // Dependencia de ingredientes, categoría y receta actual\n\n  const toggleSaveRecipe = recipe => {\n    if (!isAuthenticated) {\n      loginWithRedirect();\n      return;\n    }\n    if (favorites.some(fav => fav.id === recipe.id)) {\n      removeFavorite(recipe.id);\n    } else {\n      addFavorite(recipe);\n    }\n  };\n  const addToCartHandler = (recipe, e) => {\n    e.stopPropagation();\n    if (!isAuthenticated) {\n      loginWithRedirect();\n      return;\n    }\n    if (cart.some(item => item.id === recipe.id)) {\n      removeFromCart(recipe.id);\n    } else {\n      addToCart(recipe);\n    }\n  };\n  const navigate = useNavigate();\n  const handleRecipeClick = recipeId => {\n    navigate(`/recipe/${recipeId}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading similar recipes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Error: ${error}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"similar-recipes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recipes Based on Your Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"similar-recipes-list\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-card\",\n        onClick: () => handleRecipeClick(recipe.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          alt: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `save-btn ${favorites.some(fav => fav.id === recipe.id) ? \"saved\" : \"\"}`,\n            onClick: e => {\n              e.stopPropagation();\n              toggleSaveRecipe(recipe);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `bx ${favorites.some(fav => fav.id === recipe.id) ? \"bxs-heart\" : \"bx-heart\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => addToCartHandler(recipe, e),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `bx ${cart.some(item => item.id === recipe.id) ? \"bxs-plus\" : \"bx-plus\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, recipe.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(SimilarRecipes, \"zA21dfu/zpzxusupnz7pSP+c/Gc=\", false, function () {\n  return [useFavorites, useCart, useAuth0, useNavigate];\n});\n_c = SimilarRecipes;\nexport default SimilarRecipes;\nvar _c;\n$RefreshReg$(_c, \"SimilarRecipes\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useFavorites","useCart","useAuth0","jsxDEV","_jsxDEV","SimilarRecipes","ingredients","currentRecipeId","_s","recipes","setRecipes","loading","setLoading","error","setError","favorites","addFavorite","removeFavorite","cart","addToCart","removeFromCart","isAuthenticated","loginWithRedirect","API_KEY","ingredientList","map","ingredient","name","join","getRecipeCategory","mainIngredient","toLowerCase","includes","category","URL","fetchRecipes","response","fetch","data","json","ok","results","length","filteredRecipes","filter","recipe","id","message","toggleSaveRecipe","some","fav","addToCartHandler","e","stopPropagation","item","navigate","handleRecipeClick","recipeId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","image","alt","title","_c","$RefreshReg$"],"sources":["C:/Users/natal/Documents/GitHub/ProjecteFinal-AWUG-I/src/components-recipes/SimilarRecipes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useFavorites } from \"../components/FavoritesContext\";\r\nimport { useCart } from \"../components/CartContext\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport \"./SimilarRecipes.css\";\r\n\r\nfunction SimilarRecipes({ ingredients, currentRecipeId }) {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const { favorites, addFavorite, removeFavorite } = useFavorites();\r\n  const { cart, addToCart, removeFromCart } = useCart();\r\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\r\n  const API_KEY = \"d0fba68ef5204602ac929844f28b7d5f\";\r\n\r\n  // Convertir la lista de ingredientes en un string para la búsqueda\r\n  const ingredientList = ingredients?.map((ingredient) => ingredient.name).join(\",\") || \"\";\r\n\r\n  // Asumir el tipo de receta según el ingrediente principal\r\n  const getRecipeCategory = () => {\r\n    const mainIngredient = ingredients && ingredients[0] ? ingredients[0].name.toLowerCase() : \"\";\r\n    if (mainIngredient.includes(\"cookie\") || mainIngredient.includes(\"sugar\")) {\r\n      return \"dessert\"; // Categoría de postres (galletas, tortas, etc.)\r\n    }\r\n    if (mainIngredient.includes(\"pasta\") || mainIngredient.includes(\"noodle\")) {\r\n      return \"pasta\"; // Categoría de pasta\r\n    }\r\n    if (mainIngredient.includes(\"fish\") || mainIngredient.includes(\"seafood\")) {\r\n      return \"seafood\"; // Categoría de pescado/vida marina\r\n    }\r\n    if (mainIngredient.includes(\"chicken\") || mainIngredient.includes(\"beef\") || mainIngredient.includes(\"pork\")) {\r\n      return \"main course\"; // Categoría de carnes\r\n    }\r\n    return \"general\"; // Categoría general si no coincide con ninguna\r\n  };\r\n\r\n  // Modificar la URL para obtener recetas similares basadas en el tipo de receta\r\n  const category = getRecipeCategory();\r\n  const URL = `https://api.spoonacular.com/recipes/complexSearch?apiKey=${API_KEY}&cuisine=${category}&includeIngredients=${ingredientList}&number=10`;\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(URL);\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          if (data.results && data.results.length > 0) {\r\n            // Filtrar para asegurarse de que no se incluya la receta que se está visualizando\r\n            const filteredRecipes = data.results.filter(recipe => recipe.id !== currentRecipeId);\r\n            setRecipes(filteredRecipes); // Guardamos las recetas de la API\r\n          } else {\r\n            setError(\"No similar recipes found.\");\r\n          }\r\n        } else {\r\n          setError(data.message || \"The recipes could not be loaded.\");\r\n        }\r\n      } catch (error) {\r\n        setError(error.message || \"An error occurred while fetching recipes.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (ingredientList) {\r\n      fetchRecipes();\r\n    } else {\r\n      setLoading(false);\r\n      setError(\"No ingredients provided.\");\r\n    }\r\n  }, [ingredientList, category, currentRecipeId]); // Dependencia de ingredientes, categoría y receta actual\r\n\r\n  const toggleSaveRecipe = (recipe) => {\r\n    if (!isAuthenticated) {\r\n      loginWithRedirect();\r\n      return;\r\n    }\r\n\r\n    if (favorites.some((fav) => fav.id === recipe.id)) {\r\n      removeFavorite(recipe.id);\r\n    } else {\r\n      addFavorite(recipe);\r\n    }\r\n  };\r\n\r\n  const addToCartHandler = (recipe, e) => {\r\n    e.stopPropagation();\r\n    if (!isAuthenticated) {\r\n      loginWithRedirect();\r\n      return;\r\n    }\r\n\r\n    if (cart.some((item) => item.id === recipe.id)) {\r\n      removeFromCart(recipe.id);\r\n    } else {\r\n      addToCart(recipe);\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleRecipeClick = (recipeId) => {\r\n    navigate(`/recipe/${recipeId}`);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading similar recipes...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{`Error: ${error}`}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"similar-recipes-container\">\r\n      <h2>Recipes Based on Your Ingredients</h2>\r\n      <div className=\"similar-recipes-list\">\r\n        {recipes.map((recipe) => (\r\n          <div\r\n            key={recipe.id}\r\n            className=\"recipe-card\"\r\n            onClick={() => handleRecipeClick(recipe.id)}\r\n          >\r\n            <img src={recipe.image} alt={recipe.title} />\r\n            <h3>{recipe.title}</h3>\r\n            <div className=\"recipe-actions\">\r\n              <button\r\n                className={`save-btn ${\r\n                  favorites.some((fav) => fav.id === recipe.id) ? \"saved\" : \"\"\r\n                }`}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  toggleSaveRecipe(recipe);\r\n                }}\r\n              >\r\n                <i\r\n                  className={`bx ${\r\n                    favorites.some((fav) => fav.id === recipe.id) ? \"bxs-heart\" : \"bx-heart\"\r\n                  }`}\r\n                ></i>\r\n              </button>\r\n              <button\r\n                onClick={(e) => addToCartHandler(recipe, e)}\r\n              >\r\n                <i\r\n                  className={`bx ${\r\n                    cart.some((item) => item.id === recipe.id) ? \"bxs-plus\" : \"bx-plus\"\r\n                  }`}\r\n                ></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SimilarRecipes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}