{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Documents\\\\GitHub\\\\ProjecteFinal-AWUG-I\\\\src\\\\components\\\\SearchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./SearchResults.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchResults() {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const query = new URLSearchParams(location.search).get(\"query\");\n  const API_KEY = \"d0fba68ef5204602ac929844f28b7d5f\";\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=${API_KEY}&query=${query}&number=20`);\n        const data = await response.json();\n        if (response.ok) {\n          setRecipes(data.results);\n        } else {\n          throw new Error(data.message || \"No recipes found.\");\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRecipes();\n  }, [query]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: \"Loading recipes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: `Error: ${error}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Search Results for \\\"\", query, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes-grid\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          alt: recipe.title,\n          className: \"recipe-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, recipe.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchResults, \"nT+H+h2gLj4atMNM+dhwPCuNspk=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","SearchResults","_s","recipes","setRecipes","loading","setLoading","error","setError","location","query","URLSearchParams","search","get","API_KEY","fetchRecipes","response","fetch","data","json","ok","results","Error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","recipe","src","image","alt","title","id","_c","$RefreshReg$"],"sources":["C:/Users/natal/Documents/GitHub/ProjecteFinal-AWUG-I/src/components/SearchResults.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./SearchResults.css\";\r\n\r\nfunction SearchResults() {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const location = useLocation();\r\n  const query = new URLSearchParams(location.search).get(\"query\");\r\n  const API_KEY = \"d0fba68ef5204602ac929844f28b7d5f\";\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.spoonacular.com/recipes/complexSearch?apiKey=${API_KEY}&query=${query}&number=20`\r\n        );\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          setRecipes(data.results);\r\n        } else {\r\n          throw new Error(data.message || \"No recipes found.\");\r\n        }\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRecipes();\r\n  }, [query]);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading-container\">Loading recipes...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-container\">{`Error: ${error}`}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-results\">\r\n      <h1>Search Results for \"{query}\"</h1>\r\n      <div className=\"recipes-grid\">\r\n        {recipes.map((recipe) => (\r\n          <div key={recipe.id} className=\"recipe-card\">\r\n            <img src={recipe.image} alt={recipe.title} className=\"recipe-image\" />\r\n            <h3>{recipe.title}</h3>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}